---
- name: Setup Ubuntu Server with PM2 and Nginx
  hosts: localhost
  become: true
  vars:
    nodejs_version: "16"  # Change to your desired Node.js version
    app_name: "data-ingestion-demo"    # Name of your Node.js app
    app_port: 3000        # Local port where the Node.js app runs
    domain_name: "127.0.0.1"

  tasks:
    # Update and upgrade system packages
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist
        autoremove: yes

    # Install required dependencies
    - name: Install required dependencies
      apt:
        name:
          - curl
          - nginx
        state: present

    - name: Install Node.js
      apt:
        name: nodejs
        state: present

    # Install pnpm globally
    - name: Install pnpm
      npm:
        name: pnpm
        global: yes

    # Install pm2 globally
    - name: Install pm2 process manager
      npm:
        name: pm2
        global: yes

    # Install dependencies using pnpm
    - name: Install dependencies with pnpm
      shell: pnpm i
      args:
        chdir: "/home/ubuntu/{{ app_name }}"

    # Build the Next.js application
    - name: Build the Next.js app
      shell: pnpm run build
      args:
        chdir: "/home/ubuntu/{{ app_name }}"

    # Configure PM2 to manage the Next.js app
    - name: Setup PM2 to manage the Next.js app
      shell: |
        pm2 start pnpm --name "{{ app_name }}" -- start
        pm2 save
        pm2 startup systemd
      args:
        chdir: "/home/ubuntu/{{ app_name }}"
      register: pm2_output

    - name: Display PM2 setup output
      debug:
        var: pm2_output.stdout

    # Configure nginx
    - name: Configure nginx for reverse proxy
      template:
        src: templates/nginx.j2
        dest: "/etc/nginx/sites-available/{{ app_name }}"
        owner: root
        group: root
        mode: 0644

    - name: Enable nginx site configuration
      file:
        src: "/etc/nginx/sites-available/{{ app_name }}"
        dest: "/etc/nginx/sites-enabled/{{ app_name }}"
        state: link

    - name: Remove default nginx site configuration
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Restart nginx to apply changes
      service:
        name: nginx
        state: restarted

    # Secure server
    - name: Enable UFW and allow HTTP
      ufw:
        rule: allow
        port: "80"
        proto: tcp

    - name: Enable UFW and allow SSH
      ufw:
        rule: allow
        port: "22"
        proto: tcp

    - name: Enable UFW and deny all incoming except allowed
      ufw:
        state: enabled
        policy: deny

    # Ensure SELinux is installed
    - name: Ensure SELinux is installed
      yum:
        name: policycoreutils
        state: present

    # Enable SELinux
    - name: Set SELinux to enforcing mode
      command: setenforce 1
      ignore_errors: true  # Ignore errors if SELinux is already set

    - name: Ensure SELinux is enabled at boot
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: 'SELINUX=enforcing'

    - name: Check current SELinux status
      command: getenforce
      register: selinux_status

    - name: Display SELinux status
      debug:
        var: selinux_status.stdout
